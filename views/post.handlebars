<div class="col-md-12 mt-3">
    <div class="card">
        <div class="card-body">
            <a class="h5" id='userId' data="{{postObject.id}}" href="/post/{{postObject.id}}">{{postObject.title}}</a>
            {{#if postObject.isPostOwner}}
            <div class="float-right">
                <button class="btn btn-danger" id="deletePost" data="{{postObject.id}}">Delete</button>
            </div>
            <div class="float-right">
                <button class="btn btn-primary" id="edit-post-toggle" data="{{postObject.id}}">Edit</button>
            </div>
            {{/if}}
            <div class="h7 text-muted">{{postObject.user}}</div>
            <div class="h7">Posted: {{postObject.timestamp}}</div>
        </div>
        <ul class="list-group list-group-flush">
            <li class="list-group-item">{{postObject.body}}</li>
        </ul>
        {{!-- textarea --}}
        <div class="card-body" id="post-edit-form" style="display: none;">
            <form id="editPostForm" action="/post/{{postObject.id}}" method="POST">
                <div class="form-group">
                    <label for="title">Title</label>
                    <input type="text" class="form-control" id="post-edit-title" name="title" value="">
                </div>
                <div class="form-group">
                    <label for="body">Body</label>
                    <textarea class="form-control" id="post-edit-body" name="post-edit-body" rows="3"></textarea>
                </div>
                <button type="submit" id="post-edit-button" class="btn btn-primary">Submit</button>
            </form>
        </div>

        {{!-- create comment --}}
        <div class="card mt-3">
            <div class="card-body">
                <form>
                    <div class="form-group">
                        <label for="comment">Comment</label>
                        <textarea class="form-control" id="comment-text" name="comment" rows="3"></textarea>
                    </div>
                    <button id='create-comment-button' type="submit" class="btn btn-primary">Submit</button>
                </form>
            </div>

            {{#each postObject.comments}}
            <div class="col-md-12 mt-3">
                <div class="card">
                    <div class="card-body" id="comment-id" data="{{id}}">
                        <a class="h5" href="post/{{id}}">{{user}}{{userId}}</a>
                        {{#if isCommentOwner}}
                        <div class="float-right">
                            <button class="btn btn-danger" id="deleteComment" data="{{id}}">Delete</button>
                        </div>
                        <div class="float-right">
                            <button class="btn btn-primary" id="editComment" data="{{id}}">Edit</button>
                        </div>
                        {{/if}}
                        <div class="h7 text-muted">{{timestamp}}</div>
                        <div class="h7">Posted: {{body}}</div>
                        {{!-- textarea box --}}
                        <div class="card-body" id="comment-edit-form" style="display: none;">
                            <form id="editCommentForm" action="/post/{{postObject.id}}" method="POST">
                                <div class="form-group">
                                    <label for="body">Body</label>
                                    <textarea class="form-control" id="comment-edit-body" name="comment-edit-body"
                                        rows="3"></textarea>
                                </div>
                                <button type="submit" id="comment-edit-button" class="btn btn-primary">Submit</button>
                            </form>
                        </div>

                    </div>
                </div>
            </div>
            {{/each}}
        </div>
    </div>
    <script>
        const createCommentButton = document.getElementById('create-comment-button');
        createCommentButton.addEventListener('click', async (event) => {
            event.preventDefault();
            const commentBody = document.getElementById('comment-text').value.trim();
            console.log(commentBody);
            const postId = window.location.href.split('/').pop();
            const userId = document.getElementById('userId').getAttribute('data');
            console.log(`this is user id ${userId}`);
            const response = await fetch('/api/comments', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    body: commentBody,
                    post_id: postId
                })
            });
            const comment = await response.json();
            location.reload();

        });

        const deletePostButton = document.getElementById('deletePost');
        deletePostButton.addEventListener('click', async (event) => {
            event.preventDefault();
            const postId = event.target.getAttribute('data');
            const response = await fetch(`/api/posts/${postId}`, {
                method: 'DELETE'
            });
            const post = await response.json();
            window.location.href = '/dash';
        });

        const editPostToggle = document.getElementById('edit-post-toggle');
        const postEditForm = document.getElementById('post-edit-form');


        editPostToggle.addEventListener('click', async (event) => {
            event.preventDefault();
            if (postEditForm.style.display === 'none') {
                postEditForm.style.display = 'block';
            } else {
                postEditForm.style.display = 'none';
            }
        });

        const postEditButton = document.getElementById('post-edit-button');
        postEditButton.addEventListener('click', async (event) => {
            event.preventDefault();

            const postEditTitle = document.getElementById('post-edit-title').value;
            console.log(postEditTitle);
            const postEditBody = document.getElementById('post-edit-body').value;
            console.log(postEditBody);


            const postId = window.location.href.split('/').pop();
            const response = await fetch(`/api/posts/${postId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    title: postEditTitle,
                    body: postEditBody,
                })
            });
            location.reload();
        });


        const deleteCommentButton = document.getElementById('deleteComment');
        deleteCommentButton.addEventListener('click', async (event) => {
            event.preventDefault();
            const commentId = event.target.getAttribute('data');
            const response = await fetch(`/api/comments/${commentId}`, {
                method: 'DELETE'
            });
            const comment = await response.json();
            location.reload();
        });

        const editCommentToggle = document.getElementById('editComment');
        const commentEditForm = document.getElementById('comment-edit-form');

        editCommentToggle.addEventListener('click', async (event) => {
            event.preventDefault();
            if (commentEditForm.style.display === 'none') {
                commentEditForm.style.display = 'block';
            } else {
                commentEditForm.style.display = 'none';
            }
        });

        const commentEditButton = document.getElementById('comment-edit-button');

        commentEditButton.addEventListener('click', async (event) => {
            event.preventDefault();

            const commentEditBody = document.getElementById('comment-edit-body').value;


            const commentId = document.getElementById('comment-id').getAttribute('data');
            const response = await fetch(`/api/comments/${commentId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    body: commentEditBody,
                })
            });
            location.reload();
        });



    </script>